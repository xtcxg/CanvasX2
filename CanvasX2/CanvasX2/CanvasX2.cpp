
// CanvasX2.cpp : 定义应用程序的类行为。
//

#include "stdafx.h"
#include "afxwinappex.h"
#include "afxdialogex.h"
#include "CanvasX2.h"
#include "MainFrm.h"

#include "CanvasX2Doc.h"
#include "CanvasX2View.h"
#include "Num.h"
#include "RIGHT.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CCanvasX2App

BEGIN_MESSAGE_MAP(CCanvasX2App, CWinApp)
	ON_COMMAND(ID_APP_ABOUT, &CCanvasX2App::OnAppAbout)
	// 基于文件的标准文档命令
	ON_COMMAND(ID_FILE_NEW, &CWinApp::OnFileNew)
	ON_COMMAND(ID_FILE_OPEN, &CWinApp::OnFileOpen)
	ON_COMMAND(ID_BLACK, &CCanvasX2App::OnBlack)
	ON_COMMAND(ID_RED, &CCanvasX2App::OnRed)
	ON_COMMAND(ID_BLUE, &CCanvasX2App::OnBlue)
	ON_COMMAND(ID_YELLOW, &CCanvasX2App::OnYellow)
	ON_COMMAND(ID_CSELF, &CCanvasX2App::OnCself)
	ON_COMMAND(ID_SIZE_1, &CCanvasX2App::OnSize1)
	ON_COMMAND(ID_SIZE_2, &CCanvasX2App::OnSize2)
	ON_COMMAND(ID_SIZE_3, &CCanvasX2App::OnSize3)
	ON_COMMAND(ID_SIZE_SELF, &CCanvasX2App::OnSizeSelf)
	ON_COMMAND(ID_B3, &CCanvasX2App::OnB3)
	ON_COMMAND(ID_B4, &CCanvasX2App::OnB4)
	ON_COMMAND(ID_B5, &CCanvasX2App::OnB5)
	ON_COMMAND(ID_B6, &CCanvasX2App::OnB6)
	ON_COMMAND(ID_BSELF, &CCanvasX2App::OnBself)
END_MESSAGE_MAP()


// CCanvasX2App 构造

CCanvasX2App::CCanvasX2App()
{
	// 支持重新启动管理器
	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_ALL_ASPECTS;
#ifdef _MANAGED
	// 如果应用程序是利用公共语言运行时支持(/clr)构建的，则:
	//     1) 必须有此附加设置，“重新启动管理器”支持才能正常工作。
	//     2) 在您的项目中，您必须按照生成顺序向 System.Windows.Forms 添加引用。
	System::Windows::Forms::Application::SetUnhandledExceptionMode(System::Windows::Forms::UnhandledExceptionMode::ThrowException);
#endif

	// TODO: 将以下应用程序 ID 字符串替换为唯一的 ID 字符串；建议的字符串格式
	//为 CompanyName.ProductName.SubProduct.VersionInformation
	SetAppID(_T("CanvasX2.AppID.NoVersion"));

	// TODO: 在此处添加构造代码，
	// 将所有重要的初始化放置在 InitInstance 中
}

// 唯一的一个 CCanvasX2App 对象

CCanvasX2App theApp;


// CCanvasX2App 初始化

BOOL CCanvasX2App::InitInstance()
{
	// 如果一个运行在 Windows XP 上的应用程序清单指定要
	// 使用 ComCtl32.dll 版本 6 或更高版本来启用可视化方式，
	//则需要 InitCommonControlsEx()。否则，将无法创建窗口。
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 将它设置为包括所有要在应用程序中使用的
	// 公共控件类。
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinApp::InitInstance();


	// 初始化 OLE 库
	if (!AfxOleInit())
	{
		AfxMessageBox(IDP_OLE_INIT_FAILED);
		return FALSE;
	}

	AfxEnableControlContainer();

	EnableTaskbarInteraction(FALSE);

	// 使用 RichEdit 控件需要  AfxInitRichEdit2()	
	// AfxInitRichEdit2();

	// 标准初始化
	// 如果未使用这些功能并希望减小
	// 最终可执行文件的大小，则应移除下列
	// 不需要的特定初始化例程
	// 更改用于存储设置的注册表项
	// TODO: 应适当修改该字符串，
	// 例如修改为公司或组织名
	SetRegistryKey(_T("应用程序向导生成的本地应用程序"));
	LoadStdProfileSettings(4);  // 加载标准 INI 文件选项(包括 MRU)


	// 注册应用程序的文档模板。文档模板
	// 将用作文档、框架窗口和视图之间的连接
	CSingleDocTemplate* pDocTemplate;
	pDocTemplate = new CSingleDocTemplate(
		IDR_MAINFRAME,
		RUNTIME_CLASS(CCanvasX2Doc),
		RUNTIME_CLASS(CMainFrame),       // 主 SDI 框架窗口
		RUNTIME_CLASS(CCanvasX2View));
	if (!pDocTemplate)
		return FALSE;
	AddDocTemplate(pDocTemplate);


	// 分析标准 shell 命令、DDE、打开文件操作的命令行
	CCommandLineInfo cmdInfo;
	ParseCommandLine(cmdInfo);

	// 启用“DDE 执行”
	EnableShellOpen();
	RegisterShellFileTypes(TRUE);


	// 调度在命令行中指定的命令。如果
	// 用 /RegServer、/Register、/Unregserver 或 /Unregister 启动应用程序，则返回 FALSE。
	if (!ProcessShellCommand(cmdInfo))
		return FALSE;

	// 唯一的一个窗口已初始化，因此显示它并对其进行更新
	m_pMainWnd->ShowWindow(SW_SHOW);
	m_pMainWnd->UpdateWindow();
	// 仅当具有后缀时才调用 DragAcceptFiles
	//  在 SDI 应用程序中，这应在 ProcessShellCommand 之后发生
	// 启用拖/放
	m_pMainWnd->DragAcceptFiles();
	return TRUE;
}

int CCanvasX2App::ExitInstance()
{
	//TODO: 处理可能已添加的附加资源
	AfxOleTerm(FALSE);

	return CWinApp::ExitInstance();
}

// CCanvasX2App 消息处理程序


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()

// 用于运行对话框的应用程序命令
void CCanvasX2App::OnAppAbout()
{
	CAboutDlg aboutDlg;
	aboutDlg.DoModal();
}

// CCanvasX2App 消息处理程序


void CCanvasX2App::OnBlack()
{
	r=0;
	g=0;
	b=0;
}

void CCanvasX2App::OnRed()
{
	r=255;
	g=0;
	b=0;
}

void CCanvasX2App::OnBlue()
{
	r=0;
	g=0;
	b=255;
}

void CCanvasX2App::OnYellow()
{
	r=255;
	g=255;
	b=0;
}

void CCanvasX2App::OnCself()
{
	CColorDialog cd((0,0,0),CC_FULLOPEN);
	if(cd.DoModal()==IDOK){
		const COLORREF c=cd.GetColor();
		r = GetRValue(c);
		g = GetGValue(c);
		b = GetBValue(c);
	}
}


void CCanvasX2App::OnSize1()
{
	size=1;
}


void CCanvasX2App::OnSize2()
{
	size=2;
}


void CCanvasX2App::OnSize3()
{
	size=3;
}


void CCanvasX2App::OnSizeSelf()
{
	size=4;
}


void CCanvasX2App::OnB3()
{
	num=3;
}


void CCanvasX2App::OnB4()
{
	num=4;
}


void CCanvasX2App::OnB5()
{
	num=5;
}


void CCanvasX2App::OnB6()
{
	num=6;
	RIGHT* right = new RIGHT;
	right->Create(IDD_RIGHT);
	DWORD style = right->GetStyle();
	//right->SetParent(cv);
	right->ModifyStyle(style,WS_CHILD|WS_VISIBLE,1);
	right-> ShowWindow(SW_SHOW);
}


void CCanvasX2App::OnBself()
{
	CNum CN;
	CN.DoModal();
}
